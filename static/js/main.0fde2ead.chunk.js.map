{"version":3,"sources":["utils.js","SingleColor.js","App.js","index.js"],"names":["componentToHex","c","hex","toString","length","rgbToHex","r","g","b","SingleColor","rgb","weight","index","hexColor","useState","alert","setAlert","bcg","join","hexValue","useEffect","timeout","setTimeout","clearTimeout","className","style","backgroundColor","onClick","navigator","clipboard","writeText","App","color","setColor","error","setError","Values","all","list","setList","onSubmit","e","preventDefault","colors","console","log","type","value","onChange","target","placeholder","map","key","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2LAAA,SAASA,EAAeC,GACtB,IAAIC,EAAMD,EAAEE,SAAS,IACrB,OAAqB,GAAdD,EAAIE,OAAc,IAAMF,EAAMA,EAOxBG,MAJf,SAAkBC,EAAGC,EAAGC,GACtB,MAAO,IAAMR,EAAeM,GAAKN,EAAeO,GAAKP,EAAeQ,IC2BvDC,EA9BK,SAAC,GAAoC,IAAnCC,EAAkC,EAAlCA,IAAKC,EAA6B,EAA7BA,OAAQC,EAAqB,EAArBA,MAAOC,EAAc,EAAdA,SAAc,EAE7BC,oBAAS,GAFoB,mBAEhDC,EAFgD,KAEzCC,EAFyC,KAGjDC,EAAMP,EAAIQ,KAAK,KAEfC,GADMd,EAAQ,WAAR,cAAYK,IACV,WAAOG,IAUrB,OARAO,qBAAW,WACZ,IAAMC,EAAUC,YAAW,WAC3BN,GAAS,KACN,KACH,OAAO,kBAAMO,aAAaF,MACtB,CAACN,IAID,6BACAS,UAAS,gBAAWZ,EAAQ,IAAM,eAAiBa,MACnD,CAACC,gBAAe,cAAUT,EAAV,MACjBU,QAAS,WACPX,GAAS,GACTY,UAAUC,UAAUC,UAAUX,KAEhC,uBAAGK,UAAU,iBAAiBb,EAA9B,KACA,uBAAGa,UAAU,eAAeL,GAC7BJ,GAAS,uBAAGS,UAAU,SAAb,yB,gBCgBIO,MAvCf,WAAgB,IAAD,EACajB,mBAAS,IADtB,mBACNkB,EADM,KACCC,EADD,OAEanB,oBAAS,GAFtB,mBAENoB,EAFM,KAECC,EAFD,OAGWrB,mBAAS,IAAIsB,IAAO,WAAWC,IAAI,KAH9C,mBAGNC,EAHM,KAGAC,EAHA,KAgBb,OACA,oCACA,6BAASf,UAAU,aACnB,+CACA,0BAAMgB,SAfe,SAACC,GACpBA,EAAEC,iBACF,IACH,IAAIC,EAAS,IAAIP,IAAOJ,GAAOK,IAAI,IACpCE,EAAQI,GAEF,MAAOT,GACPC,GAAS,GACTS,QAAQC,IAAIX,MAQhB,2BAAOY,KAAK,OAAOC,MAAOf,EAAOgB,SAAU,SAACP,GAAD,OAAOR,EAASQ,EAAEQ,OAAOF,QACpEG,YAAY,UACZ1B,UAAS,UAAKU,EAAQ,QAAU,QAChC,4BAAQV,UAAU,MAAMsB,KAAK,UAA7B,YAKA,6BAAStB,UAAU,UAClBc,EAAKa,KAAI,SAACnB,EAAOpB,GAClB,OAAO,kBAAC,EAAD,eAAawC,IAAOxC,GAAWoB,EAA/B,CAAsCpB,MAASA,EACrDC,SAAYmB,EAAM9B,aChCrBmD,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,U","file":"static/js/main.0fde2ead.chunk.js","sourcesContent":["function componentToHex(c) {\r\n  var hex = c.toString(16);\r\n  return hex.length == 1 ? '0' + hex : hex;\r\n}\r\n\r\nfunction rgbToHex(r, g, b) {\r\n  return '#' + componentToHex(r) + componentToHex(g) + componentToHex(b);\r\n}\r\n\r\nexport default rgbToHex;\r\n","import React, { useState, useEffect } from 'react'\r\nimport rgbToHex from './utils'\r\n\r\nconst SingleColor = ({rgb, weight, index, hexColor}) => {\r\n //set state values \r\n const [alert, setAlert] = useState(false);\r\n const bcg = rgb.join(',')\r\n const hex = rgbToHex(...rgb);\r\n const hexValue = `#${hexColor}`\r\n /**set up a useEffect hook to hide alert message after 3 seconds*/\r\n useEffect (() => {\r\nconst timeout = setTimeout(() => {\r\nsetAlert(false)\r\n}, 3000)\r\nreturn () => clearTimeout(timeout)\r\n }, [alert])\r\n/*set the paragraph to a lighter color if index > 10*/ \r\n/*set conditional rendering with alert*/\r\n return (\r\n    <article \r\n    className={`color ${index > 10 && 'color-light'}`} style =\r\n   {{backgroundColor : `rgb(${bcg})` }}\r\n   onClick={() => {\r\n     setAlert(true);\r\n     navigator.clipboard.writeText(hexValue);\r\n   }}>\r\n   <p className='percent-value'>{weight}%</p>\r\n   <p className='color-value'>{hexValue}</p>\r\n {alert && <p className='alert'>copied to clipboard</p>}\r\n  </article>\r\n  )\r\n}\r\n\r\nexport default SingleColor\r\n","import React, { useState } from 'react'\r\nimport SingleColor from './SingleColor'\r\n\r\nimport Values from 'values.js';\r\n/*Set some state values*/\r\nfunction App() {\r\n  const [color, setColor] = useState('');\r\n  const [error, setError] = useState(false);\r\n  const [list, setList] = useState(new Values('#f15025').all(10));\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault()\r\n    try {\r\n let colors = new Values(color).all(10) //all() method is generated from an  API\r\nsetList(colors)\r\n    \r\n    } catch (error) {\r\n      setError(true);\r\n      console.log(error);\r\n    }\r\n  }\r\n  return (\r\n  <>\r\n  <section className='container'>\r\n  <h3>color generator</h3>\r\n  <form onSubmit = {handleSubmit}>\r\n  <input type='text' value={color} onChange={(e) => setColor(e.target.value)}\r\n  placeholder='#f15025'\r\n  className={`${error ? 'error' : null}`}/> \r\n  <button className='btn' type='submit'>\r\nsubmit  \r\n  </button>\r\n  </form>\r\n  </section>\r\n  <section className='colors'> \r\n  {list.map((color, index) => {\r\n  return <SingleColor key = {index} {...color} index = {index}\r\n   hexColor = {color.hex}/>\r\n})}\r\n  </section>\r\n  </>\r\n  );\r\n}\r\n\r\nexport default App\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}